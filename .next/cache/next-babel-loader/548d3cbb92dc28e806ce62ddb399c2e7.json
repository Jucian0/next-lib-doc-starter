{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { Code } from \"@chakra-ui/core\";\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Debounce Inputs\"), mdx(\"hr\", null), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"Debounce function forces a function to wait a certain amount of time before running again. The function is built to limit the number of times a function is called.\"), mdx(\"p\", null, \"   The debounce parameter delays the updating of the state until the user has stopped changing inputs for a predetermined amount of time.\"), mdx(\"br\", null), \"The input value be set to state values and then updated via React events. Defining a form\\u2019s input value via state is considered a controlled component. For controlled inputs you will need a corresponding state and then a function to update that state with changes.\", mdx(\"span\", {\n    style: {\n      color: \"#5bc0be\"\n    }\n  }, mdx(\"p\", null, \"   \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/forms.html\"\n  }), \"React Docs\"))), mdx(\"br\", null), \"It means that every change in state your component, it is mounted again.\", mdx(\"p\", null, \"   If you want to use this kind of form, you need only pass property \", mdx(Code, {\n    mdxType: \"Code\"\n  }, \"debounce:300\"), \" whit a time in object received in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useForm\"), \" hook.\"), mdx(\"br\", null), \"Also, it means that the validations are run in every state change, providing better user feedback.\", mdx(\"br\", null), mdx(\"br\", null), \"See more in Controlled Inputs with validation.\");\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}