{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport dynamic from 'next/dynamic';\nimport { useForm } from 'useforms';\nimport { CopyBlock, dracula } from 'react-code-blocks';\nimport { Row, Col } from 'react-grid-system';\nimport { Box, Input, Stack, Button, ButtonGroup, Checkbox, Radio, FormControl, FormLabel } from \"@chakra-ui/core\";\nvar ReactJson = dynamic(function () {\n  return import('react-json-view');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-json-view')];\n    },\n    modules: ['react-json-view']\n  }\n});\nvar Docs = dynamic(function () {\n  return import('./index.mdx');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./index.mdx')];\n    },\n    modules: ['./index.mdx']\n  }\n});\nvar initialValues = {\n  name: \"Jesse\",\n  email: \"jesse@jesse.com\",\n  pets: [\"felix\"],\n  others: {\n    radio: null\n  }\n};\nexport default function GetStartForm() {\n  var _useForm = useForm({\n    onChange: true,\n    initialValues: initialValues\n  }),\n      _useForm2 = _slicedToArray(_useForm, 2),\n      _useForm2$ = _useForm2[0],\n      values = _useForm2$.values,\n      reset = _useForm2$.reset,\n      input = _useForm2[1].input;\n\n  var codeBlock = \"\\n  import {useForm} from 'useforms'\\n\\n  const initialValues = {\\n      name:\\\"Jesse\\\",\\n      email:\\\"jesse@jesse.com\\\",\\n      pets:[\\\"felix\\\"]\\n  }\\n\\n  function ControlledForm(){\\n\\n      const [{values, reset},{input}] = useForm({onChange:true, initialValues})\\n      return (\\n        <>\\n            <input {...input(\\\"email\\\", \\\"email\\\")}/>\\n                    /* or  */\\n            <input {...input({name:\\\"email\\\", type:\\\"email\\\", required:true})}/>\\n\\n            <input {...input(\\\"name\\\" ,\\\"name\\\")}/>            \\n            <input {...input(\\\"pets.0\\\" ,\\\"text\\\")}/>\\n            <input {...input(\\\"pets.1\\\" ,\\\"text\\\")}/>         \\n            <input {...input(\\\"accept\\\", \\\"checkCol\\\")}/>\\n            <input value=\\\"1\\\" {...input(\\\"others.radio\\\", \\\"radio\\\")}/>First\\n            <input value=\\\"2\\\" {...input(\\\"others.radio\\\", \\\"radio\\\")}/>Second\\n            <input value=\\\"3\\\" {...input(\\\"others.radio\\\", \\\"radio\\\")}/>Third\\n        </>   \\n      )\\n  }\\n   \";\n  return __jsx(Box, {\n    marginTop: 20\n  }, __jsx(Row, null, __jsx(Col, null, __jsx(Docs, null))), __jsx(Row, null, __jsx(Col, {\n    lg: 6\n  }, __jsx(Box, {\n    padding: \"5\",\n    borderWidth: 1,\n    borderRadius: 4,\n    marginTop: 10\n  }, __jsx(Stack, {\n    spacing: 3\n  }, __jsx(Input, _extends({\n    placeholder: \"E-mail\",\n    size: \"lg\"\n  }, input({\n    name: \"email\",\n    type: \"email\",\n    required: true\n  }))), __jsx(Input, _extends({\n    placeholder: \"Name\",\n    size: \"lg\"\n  }, input(\"name\", \"text\"))), __jsx(Input, _extends({\n    placeholder: \"Pets 0\",\n    size: \"lg\"\n  }, input(\"pets.0\", \"text\"))), __jsx(Input, _extends({\n    placeholder: \"Pets 1\",\n    size: \"lg\"\n  }, input(\"pets.1\", \"text\"))), __jsx(Checkbox, input(\"accept\", \"checkbox\"), \"Checkbox\")), __jsx(FormControl, {\n    marginTop: 5\n  }, __jsx(FormLabel, {\n    htmlFor: \"email\"\n  }, \"Radio\"), __jsx(Stack, {\n    spacing: 3\n  }, __jsx(Radio, _extends({\n    value: \"1\"\n  }, input(\"others.radio\", \"radio\")), \"First\"), __jsx(Radio, _extends({\n    value: \"2\"\n  }, input(\"others.radio\", \"radio\")), \"Second\"), __jsx(Radio, _extends({\n    value: \"3\"\n  }, input(\"others.radio\", \"radio\")), \"Third\"))), __jsx(Stack, {\n    spacing: 3\n  }, __jsx(ButtonGroup, {\n    spacing: 4,\n    marginTop: 5\n  }, __jsx(Button, {\n    variantColor: \"teal\",\n    size: \"lg\",\n    onClick: reset\n  }, \"Reset\"), __jsx(Button, {\n    variantColor: \"teal\",\n    size: \"lg\",\n    onClick: function onClick() {}\n  }, \"Submit\"))))), __jsx(Col, {\n    lg: 6\n  }, __jsx(Box, {\n    marginTop: 10\n  }, __jsx(ReactJson, {\n    src: values,\n    name: \"values\",\n    theme: \"colors\",\n    style: {\n      borderRadius: 3,\n      padding: 15\n    }\n  })))), __jsx(Row, null, __jsx(Col, {\n    lg: 12,\n    id: \"code-block\",\n    style: {\n      marginTop: 50\n    }\n  }, __jsx(CopyBlock, {\n    className: \"code-block\",\n    text: codeBlock,\n    language: \"jsx\",\n    showLineNumbers: true,\n    theme: dracula,\n    codeBlock: true\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}