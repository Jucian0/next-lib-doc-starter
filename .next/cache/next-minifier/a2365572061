{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{V4DI:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"default\",(function(){return j}));var n=a(\"wx14\"),r=a(\"Ff2n\"),o=a(\"q1tI\"),i=a.n(o),b=a(\"7ljp\"),c=a(\"O5+3\"),l=a(\"HKbm\"),s=a(\"Afmz\"),p=i.a.createElement;function m(){return p(s.a,{className:\"code-block\",text:'\\n   const initialValues = {\\n      first:\"one\",\\n      second:{\\n        other:[\\n          {\\n            x:12\\n          }\\n        ]\\n      }\\n    }\\n  \\n      const finalValues = {\\n      first:\"one\",\\n      second:{\\n        other:[\\n          {\\n            x:12\\n          }\\n        ]\\n      }\\n    }\\n  \\n    <input {...input(\"second.other.0.x\", \"number\")}/>\\n                      /*or*/\\n    <input {...input({name:\"second.other.0.x\", type:\"number\"})}/>\\n   ',language:\"jsx\",showLineNumbers:!0,theme:s.b,codeBlock:!0})}i.a.createElement;var u={},d=\"wrapper\";function j(e){var t=e.components,a=Object(r.a)(e,[\"components\"]);return Object(b.b)(d,Object(n.a)({},u,a,{components:t,mdxType:\"MDXLayout\"}),Object(b.b)(\"h1\",null,\"useForms \\ud83d\\ude80\"),Object(b.b)(\"p\",null,Object(b.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://github.com/Jucian0/useforms/blob/master/LICENSE\"}),Object(b.b)(\"img\",Object(n.a)({parentName:\"a\"},{src:\"https://img.shields.io/badge/License-mit-green\",alt:\"GitHub license\"}))),\" \"),Object(b.b)(\"br\",null),Object(b.b)(\"p\",null,Object(b.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://www.npmjs.com/package/useforms\"}),Object(b.b)(\"img\",Object(n.a)({parentName:\"a\"},{src:\"https://img.shields.io/badge/npm-v1.0-ff69b4\",alt:\"npm version\"}))),\"  \"),Object(b.b)(\"br\",null),Object(b.b)(\"p\",null,Object(b.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"https://twitter.com/intent/tweet?text=React+hook+for+forms+and+validations&url=https://github.com/Jucian0/useforms&hashtags=reactjs,hook,javascript,forms\"}),Object(b.b)(\"img\",Object(n.a)({parentName:\"a\"},{src:\"https://img.shields.io/twitter/url/http/shields.io.svg?style=social\",alt:\"Tweet\"})))),Object(b.b)(\"p\",null,\"useForms provides a way to create complex forms easily, useForms provide a hook called \",Object(b.b)(\"inlineCode\",{parentName:\"p\"},\"userForm\"),\", this hook returns an object of values \\u200b\\u200bin the same shape that it receives, this is possible using dot notation. Therefore, it does not matter if the object is complex or has many properties or array, the result is the same. The same process is realized with errors object and touched object.\"),Object(b.b)(m,{mdxType:\"Example\"}),Object(b.b)(\"p\",null,\"Don't need the tag form, unless if you want to use uncontrolled inputs.\"),Object(b.b)(\"br\",null),Object(b.b)(\"p\",null,\"By default useForms work with Yup Validation.\"),Object(b.b)(c.a,{mdxType:\"Code\"},\"Yup is a JavaScript schema builder for value parsing and validation. Define a schema, transform a value to match, validate the shape of an existing value, or both. Yup schema are extremely expressive and allow modeling complex, interdependent validations, or value transformations.\"),Object(b.b)(\"br\",null),Object(b.b)(\"br\",null),Object(b.b)(\"h3\",null,\"useForm hook\"),Object(b.b)(\"p\",null,\"The first example of creating forms is a controlled form, useForm receive an initialObject with optional some properties:\"),Object(b.b)(l.b,{styleType:\"disc\",mdxType:\"List\"},Object(b.b)(l.a,{mdxType:\"ListItem\"},Object(b.b)(c.a,{mdxType:\"Code\"},\"onChange\"),\": Defines when form state will update.\"),Object(b.b)(l.a,{mdxType:\"ListItem\"},Object(b.b)(c.a,{mdxType:\"Code\"},\"debounce\"),\": Defines a form with debounce values.\"),Object(b.b)(l.a,{mdxType:\"ListItem\"},Object(b.b)(c.a,{mdxType:\"Code\"},\"initialValues\"),\": Defines initial state of form.\"),Object(b.b)(l.a,{mdxType:\"ListItem\"},Object(b.b)(c.a,{mdxType:\"Code\"},\"validations\"),\": Receives a validation schema yup.\")),Object(b.b)(\"br\",null),\"In this case I created a form without a `validation` and with ` onChange` option, it is worth mentioning that useForm by default works with uncontrolled inputs.\",Object(b.b)(\"p\",null,\"Uncontrolled inputs provide better performance because they drastically reduce the amount of time render component.\"),Object(b.b)(\"br\",null),Object(b.b)(\"p\",null,Object(b.b)(\"inlineCode\",{parentName:\"p\"},\"useForm\"),\" provide a \",Object(b.b)(\"inlineCode\",{parentName:\"p\"},\"input\"),\" function, this function as a link with input and a object property of form state.\"),Object(b.b)(\"br\",null),Object(b.b)(\"table\",null,Object(b.b)(\"thead\",{parentName:\"table\"},Object(b.b)(\"tr\",{parentName:\"thead\"},Object(b.b)(\"th\",Object(n.a)({parentName:\"tr\"},{align:null}),\"properties\"),Object(b.b)(\"th\",Object(n.a)({parentName:\"tr\"},{align:null}),\"description\"))),Object(b.b)(\"tbody\",{parentName:\"table\"},Object(b.b)(\"tr\",{parentName:\"tbody\"},Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),Object(b.b)(\"inlineCode\",{parentName:\"td\"},\"onSubmit\")),Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"is a void function that accepts a function as a parameter, this function is used when you choose uncontrolled inputs\")),Object(b.b)(\"tr\",{parentName:\"tbody\"},Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),Object(b.b)(\"inlineCode\",{parentName:\"td\"},\"reset\")),Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"is a void function that reset form for the initial state.\")),Object(b.b)(\"tr\",{parentName:\"tbody\"},Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),Object(b.b)(\"inlineCode\",{parentName:\"td\"},\"resetField\")),Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"is a void function that resets an input for the initial state. That function receives the input name as a parameter.\")),Object(b.b)(\"tr\",{parentName:\"tbody\"},Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),Object(b.b)(\"inlineCode\",{parentName:\"td\"},\"values\")),Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"object of values your form.\")),Object(b.b)(\"tr\",{parentName:\"tbody\"},Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),Object(b.b)(\"inlineCode\",{parentName:\"td\"},\"input\")),Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"is a function that returns properties for the input component, this function receives the name and type as a parameter or an object with input properties.\")),Object(b.b)(\"tr\",{parentName:\"tbody\"},Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),Object(b.b)(\"inlineCode\",{parentName:\"td\"},\"custom\")),Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"is a function that returns properties for custom input component like React Select or React Datepicker, this function receives the name and type as a parameter or an object with input properties\")),Object(b.b)(\"tr\",{parentName:\"tbody\"},Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),Object(b.b)(\"inlineCode\",{parentName:\"td\"},\"errors\")),Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"object of errors your form.\")),Object(b.b)(\"tr\",{parentName:\"tbody\"},Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),Object(b.b)(\"inlineCode\",{parentName:\"td\"},\"touched\")),Object(b.b)(\"td\",Object(n.a)({parentName:\"tr\"},{align:null}),\"object with all inputs present in your form with the boolean value.\")))))}j.isMDXComponent=!0}}]);"}