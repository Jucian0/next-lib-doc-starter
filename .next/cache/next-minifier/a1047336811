{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{\"OW+X\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",(function(){return l}));var o=n(\"wx14\"),s=n(\"Ff2n\"),a=n(\"q1tI\"),u=n.n(a),c=n(\"7ljp\"),r=(u.a.createElement,{}),i=\"wrapper\";function l(e){var t=e.components,n=Object(s.a)(e,[\"components\"]);return Object(c.b)(i,Object(o.a)({},r,n,{components:t,mdxType:\"MDXLayout\"}),Object(c.b)(\"h1\",null,\"Uncontrolled Inputs\"),Object(c.b)(\"hr\",null),Object(c.b)(\"p\",null,\"   With uncontrolled input values, there is no updating or changing of any states. What you submit is what you get.\\nUncontrolled values are useful when the form is very basic with minimalistic features.\"),Object(c.b)(\"span\",{style:{color:\"#5bc0be\"}},Object(c.b)(\"p\",null,\"   \",Object(c.b)(\"a\",Object(o.a)({parentName:\"p\"},{href:\"https://reactjs.org/docs/forms.html\"}),\"React Docs\"))),Object(c.b)(\"br\",null),\"By default, useForm use uncontrolled inputs isn't necessary to pass any value to useForm hook if you want to use this kind. But when you use this kind of form, it is necessary to realize that values are disposables only when onSubmit event is dispatched.\")}l.isMDXComponent=!0}}]);"}